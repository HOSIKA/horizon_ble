/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    flavor = "balanced";
    tapping-term-ms = <100>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        macro0: macro0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N2 &kp N1 &kp N2 &kp N1 &kp N3>;
            label = "MACRO0";
        };
    };

    behaviors {
        auto_shift: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC     &kp Q      &kp W     &kp E     &kp R      &kp T                    &kp Y  &kp U      &kp I                        &kp O                    &kp P                      &kp BSPC
&kp TAB     &kp A      &kp S     &kp D     &kp F      &kp G                    &kp H  &kp J      &kp K                        &kp L                    &auto_shift LS(SEMI) SEMI  &auto_shift LS(SQT) SQT
&kp CAPS    &kp Z      &kp X     &kp C     &kp V      &kp B  &macro0  &macro0  &kp N  &kp M      &auto_shift LS(COMMA) COMMA  &auto_shift LS(DOT) DOT  &auto_shift LS(FSLH) FSLH  &kp ENTER
&kp LSHIFT  &kt LCTRL  &kp LWIN  &kp LALT  &kp SPACE  &mo 2  &to 2    &to 1    &mo 1  &kp SPACE  &kp LEFT                     &kp UP                   &kp RIGHT                  &kp DOWN
            >;
        };

        lower_layer {
            bindings = <
&kp ESC         &kp F1     &kt F2        &kp F3        &kp F4     &kp F5                  &mt LS(GRAVE) GRAVE   &kp N7     &kp N8  &kt N9      &mt LS(MINUS) MINUS  &kp BACKSPACE
&kp TAB         &kp F6     &kp F7        &kp F8        &kt F9     &kp F10                 &kp MINUS             &kp N4     &kp N5  &kp N6      &mt LS(EQUAL) EQUAL  &kp SQT
&kp CAPS        &macro0    &macro0       &macro0       &macro0    &kp BSLH  &to 0  &to 0  &kp NON_US_BACKSLASH  &kp N1     &kp N2  &kp N3      &kp KP_NUMLOCK       &kp ENTER
&kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE  &to 3     &to 2  &to 1  &macro0               &kp SPACE  &kp N0  &kp KP_DOT  &trans               &trans
            >;
        };

        raise_layer {
            bindings = <
&auto_shift LS(GRAVE) GRAVE  &kp C_VOL_UP  &kp PG_UP  &kp UP    &kp PAGE_DOWN  &trans                &kp HOME             &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR           &mt LS(EQUAL) EQUAL
&kp CLCK                     &kp C_VOL_DN  &kp LEFT   &kp DOWN  &kp RIGHT      &trans                &kp END              &kp DLLR  &kp PRCNT  &kp CARET  &mt LS(LBKT) LBKT  &mt LS(RBKT) RBKT
&trans                       &trans        &trans     &trans    &trans         &trans  &to 0  &to 0  &kp LA(F4)           &kp EXCL  &kp AT     &kp HASH   &macro0            &macro0
&trans                       &trans        &trans     &trans    &trans         &to 3   &to 2  &to 1  &kp C_AL_CALCULATOR  &trans    &macro0    &macro0    &macro0            &macro0
            >;
        };

        adjust_layer {
            bindings = <
&kp C_VOL_UP         &kp F1  &kp F2     &kp F3       &kp F4         &kp F5                                  &kp KP_NUMLOCK  &kp CLCK  &kp INSERT  &kp SCROLLLOCK  &kp PRINTSCREEN  &kp PAUSE_BREAK
&kp C_VOL_DN         &kp F6  &kp F7     &kp F8       &kp F9         &kp F10                                 &trans          &trans    &trans      &trans          &trans           &trans
&kp K_MUTE           &trans  &trans     &trans       &kp F11        &kp F12     &to 0         &to 0         &trans          &trans    &trans      &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2
&kp C_AL_CALCULATOR  &trans  &kp LG(L)  &kp PAGE_UP  &kp PAGE_DOWN  &kp LA(F4)  &out OUT_BLE  &out OUT_USB  &trans          &trans    &trans      &bt BT_SEL 3    &bt BT_SEL 4     &bt BT_CLR
            >;
        };
    };
};
